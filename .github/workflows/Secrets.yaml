name: Secrets

on:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: PowerShell

env:
  FORMATSTR: '''{{"S1":{0},"S2":{1},"S3":{2}}}'''

jobs:
  update:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read Settings
        run: |
          $settings = @{ "TestSecretSecretName" = "NYTEST" } | ConvertTo-Json -compress
          Add-Content -Path $env:GITHUB_ENV -Value "settings=$settings"

      - name: GetSecrets1
        id: GetSecrets1
        env:
          Secrets: ghTokenWorkflow,TestSecret,SomeTest
        run: |
          $settings = $env:settings | ConvertFrom-Json
          $formatArr = @()
          $cnt = 0
          foreach($secret in $env:Secrets.Split(',')) {
            $secretName = $secret
            if ($settings.PSObject.Properties.Name -eq "$($secret)SecretName") {
              $secretName = $settings."$($secret)SecretName"
            }
            $formatArr += @("""$Secret"":{$cnt}")
            Add-Content $ENV:GITHUB_OUTPUT "S$cnt=$secretName"
            Write-Host "S$cnt=$secretName"
            $cnt++
          }
          Write-Host "formatStr={{$($formatArr -join ',')}}"
          Add-Content $ENV:GITHUB_OUTPUT "formatStr={{$($formatArr -join ',')}}"
          if ($cnt -gt 3) {
            throw "Too many secrets"
          }

      - name: GetSecretFromGitHub
        id: getsecrets
        env:
          SECRETS_JSON: ${{ format(steps.GetSecrets1.outputs.formatStr,toJSON(secrets[steps.GetSecrets1.outputs.S0]),toJSON(secrets[steps.GetSecrets1.outputs.S1]),toJSON(secrets[steps.GetSecrets1.outputs.S2])) }}
        run: |
          Write-Host $ENV:SECRETS_JSON
          $mySecrets = $ENV:SECRETS_JSON | ConvertFrom-Json
          Write-Host $mySecrets.GhTokenWorkflow.Length
          Write-Host $mySecrets.TestSecret.Length
          Write-Host $mySecrets.S3.Length
